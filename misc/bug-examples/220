#!/usr/bin/env python

# Original bug script from Piotr Kaleta (pkaleta)

# The essential issue is that build_cigar_string overwrites cached
# data.

import vvhgvs.dataproviders.uta
import vvhgvs.location
import vvhgvs.posedit
import vvhgvs.edit
import vvhgvs.sequencevariant
import vvhgvs.variantmapper
from support import CACHE

def create_genomic_variant():
    start = vvhgvs.location.SimplePosition(118898437)
    end = vvhgvs.location.SimplePosition(118898437)
    iv = vvhgvs.location.Interval(start=start, end=end)
    edit = vvhgvs.edit.NARefAlt(ref='G', alt='T')
    posedit = vvhgvs.posedit.PosEdit(pos=iv, edit=edit)
    genomic_variant = vvhgvs.sequencevariant.SequenceVariant(ac='NC_000011.9', type='g', posedit=posedit, )
    return genomic_variant


gvar = create_genomic_variant()

hdp = vvhgvs.dataproviders.uta.connect(mode="run", cache=CACHE)

print("build a variant mapper once for the given transcript: all okay")
variantmapper = vvhgvs.variantmapper.VariantMapper(hdp)
for _ in range(4):
    print(variantmapper.g_to_c(gvar, 'NM_001164277.1'))

print("""build a variant mapper in each loop. Although this is wasteful, it
should return consistent results. It doesn't.""")
for _ in range(4):
    variantmapper = vvhgvs.variantmapper.VariantMapper(hdp)
    print(variantmapper.g_to_c(gvar, 'NM_001164277.1'))

# As of 1b1d5ff268e3 (Feb 2015), one gets:
# (default-2.7)snafu$ ./tests/bug-examples/220 
## build a variant mapper once for the given transcript: all okay
## NM_001164277.1:c.526+1C>A
## NM_001164277.1:c.526+1C>A
## NM_001164277.1:c.526+1C>A
## NM_001164277.1:c.526+1C>A
## build a variant mapper in each loop. Although this is wasteful, it
## should return consistent results. It doesn't.
## NM_001164277.1:c.526C>A
## NM_001164277.1:c.526+1C>A
## NM_001164277.1:c.526C>A
## NM_001164277.1:c.526+1C>A
